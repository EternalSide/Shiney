// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id   String @id @default(uuid())
  name String 
  clerkId String @unique 
  username String @unique 
  email String @unique
  password String? 
  about String?
  picture String?
  
  role String? 

 shops Shop[]
 favorites  Favorite[]
 follower Follower[]


 joinedAt DateTime @default(now())
}

model Shop {
  id String           @id @default(uuid())
  name String      
  link String          @unique
  avatar String?       @db.Text
  banner String?       @db.Text
  description String  @db.Text
  buyCount Int         @default(0)
  rating String        @default("0.00")
  verified Boolean     @default(false)

  creatorId String    
  creator User  @relation(fields: [creatorId], references: [id], onDelete: Cascade)

  products Product[]  
  followers Follower[]

  createdOn DateTime   @default(now())
}

model Product {
  id String           @id @default(uuid())
  title String 
  buyNumber Int @default(0)
  description String
  picture String?
  price String


  shopId String
  Shop Shop  @relation(fields: [shopId], references: [id], onDelete: Cascade)
  
  categoryId String   
  categories Category  @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  
  favorites    Favorite[]

  createdAt DateTime @default(now())
}

model Category {
 id String    @id @default(uuid())
 href String @unique
 label String  
 products Product[]
}

model Favorite {
  id String           @id @default(uuid())
  userId     String
  productId  String
  user       User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  product    Product   @relation(fields: [productId], references: [id], onDelete: Cascade)

   createdAt DateTime @default(now())
}

model Follower {
  id String           @id @default(uuid())
  userId     String
  shopId  String
  user       User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  shop    Shop   @relation(fields: [shopId], references: [id], onDelete: Cascade)
}